@page "/medicamento"

<style>
    button {
        background-color: #00aaff;
        color: white;
        border: 2px solid cyan;
        border-radius: 10px;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s, transform 0.2s;
    }

        button:hover {
            background-color: #0088cc;
            transform: scale(1.05);
        }

    body {
        font-family: Arial, sans-serif;
        background-color: #f0f8ff;
        color: #333;
        margin: 20px;
    }

    h1 {
        color: #0077cc;
        font-size: 2.5em;
        text-align: center;
        text-shadow: 1px 1px 2px #00aaff;
    }

    h2 {
        color: #0088cc;
        font-size: 2em;
        border-bottom: 2px solid cyan;
        padding-bottom: 5px;
        margin-bottom: 15px;
    }

    h3 {
        color: #00aaff;
        font-size: 1.5em;
        margin-bottom: 10px;
    }

    .table-container {
        max-width: 800px;
        margin: 0 auto;
        overflow-x: auto;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .table {
        width: 100%;
        border-collapse: collapse;
        background-color: #ffffff;
    }

        .table thead {
            background-color: #00aaff;
            color: white;
            text-align: left;
        }

        .table th {
            font-size: 16px;
            font-weight: bold;
            border-bottom: 2px solid #0077cc;
        }

        .table td {
            border-bottom: 1px solid #e0e0e0;
            font-size: 14px;
        }

        .table tr:nth-child(odd) {
            background-color: #f0f8ff;
        }

        .table tr:nth-child(even) {
            background-color: #ffffff;
        }

        .table tr:hover {
            background-color: #e0f7ff;
        }

        .table td .action-buttons {
            display: flex;
            gap: 5px;
        }

        .table td button {
            border: none;
            border-radius: 5px;
            padding: 5px 10px;
            font-size: 14px;
            cursor: pointer;
            transition: background-color 0.3s;
            min-width: 80px;
            text-align: center;
        }

            .table td button:hover {
                background-color: #0077cc;
            }

    .form-control {
        width: 100%;
        max-width: 400px;
        padding: 10px;
        font-size: 16px;
        border: 2px solid #00aaff;
        border-radius: 8px;
        background-color: #f9fcff;
        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
        color: #333;
        transition: border-color 0.3s, box-shadow 0.3s;
    }

        .form-control:focus {
            border-color: #0077cc;
            box-shadow: 0 0 8px rgba(0, 119, 204, 0.5);
            outline: none;
        }

        .form-control::placeholder {
            color: #aaa;
            font-style: italic;
        }

    .btn {
        margin-top: 5px;
    }

    .btn-secondary {
        display: inline-block;
        padding: 10px 20px;
        font-size: 16px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        width: 150px;
        text-align: center;
        transition: background-color 0.3s, transform 0.2s;
        background-color: #d3d3d3;
        color: black;
    }

    .btn-success {
        display: inline-block;
        padding: 10px 20px;
        font-size: 16px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        width: 150px;
        text-align: center;
        transition: background-color 0.3s, transform 0.2s;
        background-color: #009acd;
        color: white;
    }


        .btn-success:hover {
            background-color: #009acd;
            transform: scale(1.05);
        }

    .btn-secondary:hover {
        background-color: #a9a9a9;
        transform: scale(1.05);
    }
</style>

<h3>Gestión de Medicamentos</h3>

@if (listM == null)
{
    <p>Cargando medicamentos...</p>
}
else
{
    <RadzenDataGrid TItem="cMedicamento" Data="@listM" ColumnWidth="200px">
        <Columns>
            <RadzenDataGridColumn TItem="cMedicamento" Property="descripcion" Title="Descripción" />
            <RadzenDataGridColumn TItem="cMedicamento" Property="presentacion" Title="Presentación" />
            <RadzenDataGridColumn TItem="cMedicamento" Property="marca" Title="Marca" />
            <RadzenDataGridColumn TItem="cMedicamento" Property="estado" Title="Estado" />
            <RadzenDataGridColumn TItem="cMedicamento" Context="medicamento">
                <Template Context="medicamento">
                    <button class="btn btn-warning btn-sm" @onclick="() => Edit(medicamento)">Editar</button>
                    <ConfirmDialog @ref="dialog" />
                    <button class="btn btn-danger btn-sm" @onclick="() => ShowConfirmationAsync(medicamento)">Eliminar</button>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}

<hr />
<h4>@(medicamentoEditar.idmedicamento == 0 ? "Agregar Medicamento" : "Editar Medicamento")</h4>

<EditForm Model="nuevoMedicamento" OnValidSubmit="@(medicamentoEditar.idmedicamento == 0 ? AgregarMedicamento : ActualizarMedicamento)">
    <div>
        <label>Descripción:</label>
        <InputText @bind-Value="nuevoMedicamento.descripcion" class="form-control" />
    </div>
    <div>
        <label>Presentación:</label>
        <InputText @bind-Value="nuevoMedicamento.presentacion" class="form-control" />
    </div>
    <div>
        <label>Marca:</label>
        <InputText @bind-Value="nuevoMedicamento.marca" class="form-control" />
    </div>
    <div>
        <label>Estado:</label>
        <InputText @bind-Value="nuevoMedicamento.estado" class="form-control" />
    </div>
    <button type="submit" class="btn btn-success btn-lg">Guardar</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancelar">Cancelar</button>
</EditForm>

@if (!string.IsNullOrEmpty(respuesta))
{
    <div class="alert alert-info mt-3">@respuesta</div>
}

@if (respuesta == "Exito")
{
    <div class="alert alert-success mt-3">
        Medicamento agregado exitosamente.
    </div>
}
else if (respuesta == null)
{
    <div class="alert alert-danger mt-3">
        Hubo un error al agregar el medicamento.
    </div>
}

<!-- Notificación de éxito al agregar medicamento -->
@if (notificacionVisible)
{
    <div class="toast-container position-fixed top-0 end-0 p-3">
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <strong class="me-auto">Notificación</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close" @onclick="() => notificacionVisible = false"></button>
            </div>
            <div class="toast-body">
                ¡Medicamento agregado con éxito!
            </div>
        </div>
    </div>
}

@code {
    @inject NavigationManager _navigationManager

    private blMedicamento medicamento = new();
    private IEnumerable<cMedicamento> listM = default!;
    private string? respuesta = "Aquí registra si sucede algo";
    private cMedicamento medicamentoAEliminar = new();
    private bool showDialog = false;
    private ConfirmDialog dialog = default!;
    private bool notificacionVisible = false; // Controlar la visibilidad de la notificación

    private void ReloadPage()
    {
        _navigationManager.Refresh();
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            listM = await medicamento.getModel();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching data: {ex.Message}");
        }
    }

    private async Task ShowConfirmationAsync(cMedicamento item)
    {
        var options = new ConfirmDialogOptions
        {
            YesButtonText = "Confirmar",
            YesButtonColor = ButtonColor.Danger,
            NoButtonText = "Volver",
            NoButtonColor = ButtonColor.Secondary,
            IsVerticallyCentered = true
        };

        var confirmation = await dialog.ShowAsync(
            title: $"Seguro que desea eliminar el medicamento {item.descripcion}?",
            message1: "Esto eliminará su registro. Ya no se podrá recuperar.",
            message2: "¿Desea continuar?",
            confirmDialogOptions: options
        );

        if (confirmation)
        {
            medicamentoAEliminar = item;
            await EliminarMedicamento();
        }
    }

    private cMedicamento nuevoMedicamento = new();

    private void Edit(cMedicamento data)
    {
        medicamentoEditar = data;
    }

    private async Task AgregarMedicamento()
    {
        try
        {
            respuesta = await medicamento.postModel(nuevoMedicamento);
            if (!string.IsNullOrEmpty(respuesta))
            {
                notificacionVisible = true;
                ReloadPage();
                Console.WriteLine("Medicamento agregado exitosamente.");
            }
            else
            {
                respuesta = null;
                Console.WriteLine("Hubo un error al agregar el medicamento.");
            }
        }
        catch (Exception ex)
        {
            respuesta = null;
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private cMedicamento medicamentoEditar = new();

    private async Task ActualizarMedicamento()
    {
        var respuesta = await medicamento.putModel(medicamentoEditar);
        if (!string.IsNullOrEmpty(respuesta))
        {
            Console.WriteLine("Medicamento actualizado exitosamente.");
            medicamentoEditar = new cMedicamento();
            ReloadPage();
        }
        else
        {
            Console.WriteLine("Hubo un error al actualizar el medicamento.");
        }
    }

    private async Task EliminarMedicamento()
    {
        var respuesta = await medicamento.deleteModel(medicamentoAEliminar);
        if (!string.IsNullOrEmpty(respuesta))
        {
            Console.WriteLine("Medicamento eliminado exitosamente.");
            medicamentoAEliminar = new cMedicamento();
            ReloadPage();
        }
        else
        {
            Console.WriteLine("Hubo un error al eliminar el medicamento.");
        }
    }

    private void Cancelar()
    {
        // Resetear el formulario o cerrar la página
        Console.WriteLine("Operación cancelada.");
    }
}
